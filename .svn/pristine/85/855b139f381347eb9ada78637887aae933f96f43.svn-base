/**
 * Teaching Threads
 * CS 241 - Spring 2017
 */
#include <pthread.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include "reduce.h"
#include "reducers.h"

// Task struct that gets passed into pthread_create
typedef struct {
  int *output;         // Pointer to where the output should be written
  int *list;           // Pointer to the begining of the list.
  size_t list_len;     // Length of the list.
  reducer reduce_func; // Reduce function for reduce()
  int base_case;       // Base case for the reduce function
} task;

/* You should create a start routine for your threads. */

int par_reduce(int *list, size_t list_len, reducer reduce_func, int base_case,
               size_t num_threads) {
  /* Your implementation goes here */
  return 0;
}
